<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="java.util.ArrayList"/>
<fullyQualifiedTypeName name="java.nio.file.Path"/>
<fullyQualifiedTypeName name="org.apache.lucene.index.IndexWriterConfig"/>
<fullyQualifiedTypeName name="org.apache.lucene.index.IndexWriter"/>
<fullyQualifiedTypeName name="org.apache.lucene.document.StringField"/>
<fullyQualifiedTypeName name="java.awt.TextField"/>
<fullyQualifiedTypeName name="org.apache.lucene.document.TextField"/>
<fullyQualifiedTypeName name="org.apache.lucene.analysis.Analyzer"/>
<fullyQualifiedTypeName name="org.apache.lucene.store.SimpleFSDirectory"/>
<fullyQualifiedTypeName name="org.apache.lucene.index.IndexReader"/>
<fullyQualifiedTypeName name="org.apache.lucene.index.DirectoryReader"/>
<fullyQualifiedTypeName name="org.apache.lucene.store.Directory"/>
<fullyQualifiedTypeName name="org.apache.lucene.search.IndexSearcher"/>
<fullyQualifiedTypeName name="org.apache.lucene.search.TopScoreDocCollector"/>
<fullyQualifiedTypeName name="org.apache.lucene.util.Version"/>
<fullyQualifiedTypeName name="org.apache.lucene.analysis.standard.StandardAnalyzer"/>
<fullyQualifiedTypeName name="org.apache.lucene.search.Query"/>
<fullyQualifiedTypeName name="org.apache.lucene.store.FSDirectory"/>
<fullyQualifiedTypeName name="org.apache.lucene.index.Term"/>
<fullyQualifiedTypeName name="org.apache.lucene.search.PhraseQuery"/>
<fullyQualifiedTypeName name="org.apache.lucene.search.TopDocs"/>
<fullyQualifiedTypeName name="org.apache.lucene.search.ScoreDoc"/>
<fullyQualifiedTypeName name="org.apache.lucene.document.Document"/>
<fullyQualifiedTypeName name="org.apache.lucene.search.BooleanQuery"/>
<fullyQualifiedTypeName name="org.apache.lucene.search.TermQuery"/>
<fullyQualifiedTypeName name="org.apache.lucene.search.BooleanClause"/>
<fullyQualifiedTypeName name="org.apache.lucene.search.BooleanClause.Occur"/>
<fullyQualifiedTypeName name="org.apache.lucene.queries.mlt.MoreLikeThis"/>
<fullyQualifiedTypeName name="java.io.PrintWriter"/>
<fullyQualifiedTypeName name="java.io.FileWriter"/>
<fullyQualifiedTypeName name="net.sf.classifier4J.summariser.SimpleSummariser"/>
<fullyQualifiedTypeName name="com.aliasi.classify.LMClassifier"/>
<fullyQualifiedTypeName name="com.aliasi.classify.DynamicLMClassifier"/>
<fullyQualifiedTypeName name="java.util.List"/>
<fullyQualifiedTypeName name="com.aliasi.util.Files"/>
<fullyQualifiedTypeName name="java.io.IOException"/>
<fullyQualifiedTypeName name="com.aliasi.classify.Classified"/>
<fullyQualifiedTypeName name="com.aliasi.classify.Classification"/>
<fullyQualifiedTypeName name="com.aliasi.lm.NGramProcessLM"/>
<fullyQualifiedTypeName name="com.aliasi.util.AbstractExternalizable"/>
<fullyQualifiedTypeName name="com.aliasi.classify.ConditionalClassification"/>
<fullyQualifiedTypeName name="java.lang.System"/>
<fullyQualifiedTypeName name="sentiment.SentimentAnalyzer"/>
<fullyQualifiedTypeName name="util.Utility"/>
<fullyQualifiedTypeName name="java.io.File"/>
<fullyQualifiedTypeName name="java.util.HashSet"/>
<fullyQualifiedTypeName name="java.util.Set"/>
<fullyQualifiedTypeName name="weka.filters.unsupervised.attribute.StringToWordVector"/>
<fullyQualifiedTypeName name="weka.core.tokenizers.NGramTokenizer"/>
<fullyQualifiedTypeName name="weka.core.stemmers.Stemmer"/>
<fullyQualifiedTypeName name="org.tartarus.snowball.ext.PorterStemmer"/>
<fullyQualifiedTypeName name="weka.filters.Filter"/>
<fullyQualifiedTypeName name="weka.classifiers.bayes.NaiveBayes"/>
<fullyQualifiedTypeName name="weka.classifiers.Evaluation"/>
<fullyQualifiedTypeName name="org.tartarus.snowball.SnowballStemmer"/>
<fullyQualifiedTypeName name="weka.core.stemmers.SnowballStemmer"/>
<fullyQualifiedTypeName name="weka.classifiers.meta.FilteredClassifier"/>
<fullyQualifiedTypeName name="weka.classifiers.functions.SMO"/>
<fullyQualifiedTypeName name="weka.classifiers.functions.Logistic"/>
<fullyQualifiedTypeName name="weka.classifiers.functions.LibSVM"/>
</qualifiedTypeNameHistroy>
