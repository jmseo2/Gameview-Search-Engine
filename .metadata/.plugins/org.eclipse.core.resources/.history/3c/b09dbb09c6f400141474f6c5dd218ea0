package util;

import java.io.*;

public class Utility {
    // returns data of webpage text file
    public static String[] readWebpageTextData(String fileName) {
        String[] res = new String[4];
        try {
            BufferedReader in = new BufferedReader(new FileReader(fileName));
            String docid = in.readLine();
            String url = in.readLine();
            String title = in.readLine();
            String body = "";
            while (true) {
                String line = in.readLine();
                if (line == null)
                    break;
                line = line.trim();
                if (line.equals(""))
                    continue;
                body += line + "\n";
            }
            title = getTitle(url);
            res[0] = docid;
            res[1] = url;
            res[2] = title;
            res[3] = body;
            in.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
        return res;
    }
    
    /* Function that retrieves title of the text
     * The url seems to be good enough to retrieve this info
     * This function is required because the html title does not match with the actual
     * title of the review
     */
    public static String getTitle(String url) {
        String [] tokens = url.split("/");
        for (int i = 0; i < tokens.length; i++) {
            if (tokens[i].equals("reviews") && i + 1 < tokens.length) {
                String [] tokens2 = tokens[i + 1].split("-");
                String res = "";
                for (String token : tokens2) {
                    res += token + " ";
                }
                return res.trim();
            }
        }
        return null;
    }
    
    // function that only retrieves the review text
    public static String getOnlyReviewText(String text) {
        String [] lines = text.split("\n");
        boolean add = false;
        String res = "";
        for (int i = 0; i < lines.length; i++) {
            String line = lines[i].trim();
            if (line.equals("+1")) {
                add = true;
                continue;
            }
            
            if (line.equals("Did you enjoy this review?Sign In to Upvote")) {
                break;
            }
            
            if (add) {
                res += line + " ";
            }
        }
        return res;
    }
    
    
    public static double [] getProb(String fileName) {
        double [] res = new double[2];
        try {
            BufferedReader in = new BufferedReader(new FileReader(fileName));
            String [] tokens = in.readLine().split(" ");
            res[0] = Double.parseDouble(tokens[0]);
            res[1] = Double.parseDouble(tokens[1]);
            in.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
        return res;
    }
    
    public static int editDistance(String a, String b) {
        a = a.toLowerCase();
        b = b.toLowerCase();
        int [][] D = new int[a.length() + 1][b.length() + 1];
        
        for (int i = 1; i <= a.length(); i++) {
            D[i][0] = i;
        }
        for (int i = 1; i <= b.length(); i++) {
            D[0][i] = i;
        }
        for (int i = 1; i <= a.length(); i++) {
            for (int j = 1; j <= b.length(); j++) {
                if (a.charAt(i - 1) == b.charAt(j - 1)) {
                    D[i][j] = D[i - 1][j - 1];
                } else {
                    int ans1 = D[i - 1][j - 1] + 1;
                    int ans2 = D[i - 1][j] + 1;
                    int ans3 = D[i][j - 1] + 1;
                    D[i][j] = Math.min(ans1, Math.min(ans2, ans3));
                }
            }
        }
        return 0;
    }
}
