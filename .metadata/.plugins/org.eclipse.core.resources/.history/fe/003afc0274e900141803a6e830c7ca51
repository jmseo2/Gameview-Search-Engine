package sentiment;

import java.io.File;
import java.io.IOException;
import java.util.*;

import com.aliasi.classify.Classification;
import com.aliasi.classify.Classified;
import com.aliasi.classify.DynamicLMClassifier;
import com.aliasi.classify.LMClassifier;
import com.aliasi.lm.NGramProcessLM;
import com.aliasi.util.Files;

public class SentimentAnalyzer {
    private File trainDataDir;
    private DynamicLMClassifier<NGramProcessLM> classifier;
    private String [] labels;
    private int nGramLength;
    public SentimentAnalyzer() {
        nGramLength = 6;
    }
    
    public SentimentAnalyzer setTrainDataDirectory(String dir) {
        trainDataDir = new File(dir);
        labels = trainDataDir.list();
        return this;
    }
    
    public SentimentAnalyzer setNGramLength(int len) {
        nGramLength = len;
        return this;
    }
    
    public void train() throws IOException {
        System.out.println("Training classifier...");
        classifier = DynamicLMClassifier.createNGramProcess(labels, nGramLength);
        for (String label : labels) {
            Classification classification = new Classification(label);
            File labelDir = new File(trainDataDir, label);
            File [] trainDataFiles = labelDir.listFiles();
            for (File trainDataFile : trainDataFiles) {
                String review = Files.readFromFile(trainDataFile, "ISO-8859-1");
                Classified<CharSequence> classified = new Classified<CharSequence>(review, classification);
                classifier.handle(classified);
            }
            System.out.println("Number of " + label + " training data: " + trainDataFiles.length);
        }
        System.out.println("Training classifier done...");
    } 
}
